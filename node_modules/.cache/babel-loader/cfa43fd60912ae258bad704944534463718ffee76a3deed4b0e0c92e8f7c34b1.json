{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Search engine usng react\\\\src\\\\App.js\";\nimport './App.css';\nimport Home from \"./pages/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SearchPage from \"./pages/SearchPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js').then(registration => {\n      console.log('Service Worker registered', registration.scope);\n    }).catch(error => {\n      console.error('Service Worker registration failed:', error);\n    });\n  });\n}\ns;\nif ('SharedWorker' in window) {\n  // Register the shared worker\n  navigator.serviceWorker.register('shared-worker.js').then(registration => {\n    console.log('Shared Worker registered!', registration);\n\n    // After registration, create a new SharedWorker instance\n    const sharedWorker = new SharedWorker('shared-worker.js');\n\n    // Function to handle incoming messages from the shared worker\n    sharedWorker.port.onmessage = event => {\n      const result = event.data;\n      console.log('Received result from shared worker:', result);\n    };\n\n    // Function to send a message to the shared worker\n    function sendMessageToWorker(message) {\n      sharedWorker.port.postMessage(message);\n    }\n\n    // Call the function to send a message to the shared worker\n    sendMessageToWorker('Hello, Shared Worker!');\n  }).catch(error => {\n    console.error('Error registering Shared Worker:', error);\n  });\n} else {\n  console.log('Shared Workers are not supported in this browser.');\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    id: \"dkm\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/search\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-page-container\",\n            children: /*#__PURE__*/_jsxDEV(SearchPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Home","BrowserRouter","Router","Switch","Route","SearchPage","jsxDEV","_jsxDEV","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","scope","catch","error","s","sharedWorker","SharedWorker","port","onmessage","event","result","data","sendMessageToWorker","message","postMessage","App","className","id","children","path","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/Search engine usng react/src/App.js"],"sourcesContent":["import './App.css';\nimport Home from \"./pages/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SearchPage from \"./pages/SearchPage\";\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker\n      .register('/service-worker.js')\n      .then((registration) => {\n        console.log('Service Worker registered', registration.scope);\n      })\n      .catch((error) => {\n        console.error('Service Worker registration failed:', error);\n      });\n  });\n}\ns\nif ('SharedWorker' in window) {\n  // Register the shared worker\n  navigator.serviceWorker.register('shared-worker.js')\n    .then((registration) => {\n      console.log('Shared Worker registered!', registration);\n\n      // After registration, create a new SharedWorker instance\n      const sharedWorker = new SharedWorker('shared-worker.js');\n\n      // Function to handle incoming messages from the shared worker\n      sharedWorker.port.onmessage = (event) => {\n        const result = event.data;\n        console.log('Received result from shared worker:', result);\n      };\n\n      // Function to send a message to the shared worker\n      function sendMessageToWorker(message) {\n        sharedWorker.port.postMessage(message);\n      }\n\n      // Call the function to send a message to the shared worker\n      sendMessageToWorker('Hello, Shared Worker!');\n    })\n    .catch((error) => {\n      console.error('Error registering Shared Worker:', error);\n    });\n} else {\n  console.log('Shared Workers are not supported in this browser.');\n}\n\nfunction App() {\n  return (\n    <div className=\"app\" id=\"dkm\">\n      <Router>\n        <Switch>\n          <Route path=\"/search\">\n          <div className=\"search-page-container\">\n              <SearchPage />\n              </div>\n          </Route>\n          <Route path=\"/\">\n              <Home />\n          </Route>\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,cAAc;AAC/B,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,UAAU,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,IAAI,eAAe,IAAIC,SAAS,EAAE;EAChCC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;IACpCF,SAAS,CAACG,aAAa,CACpBC,QAAQ,CAAC,oBAAoB,CAAC,CAC9BC,IAAI,CAAEC,YAAY,IAAK;MACtBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,YAAY,CAACG,KAAK,CAAC;IAC9D,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D,CAAC,CAAC;EACN,CAAC,CAAC;AACJ;AACAC,CAAC;AACD,IAAI,cAAc,IAAIX,MAAM,EAAE;EAC5B;EACAD,SAAS,CAACG,aAAa,CAACC,QAAQ,CAAC,kBAAkB,CAAC,CACjDC,IAAI,CAAEC,YAAY,IAAK;IACtBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,YAAY,CAAC;;IAEtD;IACA,MAAMO,YAAY,GAAG,IAAIC,YAAY,CAAC,kBAAkB,CAAC;;IAEzD;IACAD,YAAY,CAACE,IAAI,CAACC,SAAS,GAAIC,KAAK,IAAK;MACvC,MAAMC,MAAM,GAAGD,KAAK,CAACE,IAAI;MACzBZ,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEU,MAAM,CAAC;IAC5D,CAAC;;IAED;IACA,SAASE,mBAAmBA,CAACC,OAAO,EAAE;MACpCR,YAAY,CAACE,IAAI,CAACO,WAAW,CAACD,OAAO,CAAC;IACxC;;IAEA;IACAD,mBAAmB,CAAC,uBAAuB,CAAC;EAC9C,CAAC,CAAC,CACDV,KAAK,CAAEC,KAAK,IAAK;IAChBJ,OAAO,CAACI,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;EAC1D,CAAC,CAAC;AACN,CAAC,MAAM;EACLJ,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;AAClE;AAEA,SAASe,GAAGA,CAAA,EAAG;EACb,oBACExB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAACC,EAAE,EAAC,KAAK;IAAAC,QAAA,eAC3B3B,OAAA,CAACL,MAAM;MAAAgC,QAAA,eACL3B,OAAA,CAACJ,MAAM;QAAA+B,QAAA,gBACL3B,OAAA,CAACH,KAAK;UAAC+B,IAAI,EAAC,SAAS;UAAAD,QAAA,eACrB3B,OAAA;YAAKyB,SAAS,EAAC,uBAAuB;YAAAE,QAAA,eAClC3B,OAAA,CAACF,UAAU;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACRhC,OAAA,CAACH,KAAK;UAAC+B,IAAI,EAAC,GAAG;UAAAD,QAAA,eACX3B,OAAA,CAACP,IAAI;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV;AAACC,EAAA,GAlBQT,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}