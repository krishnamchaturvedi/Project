{"ast":null,"code":"const dbName = 'search_results_db';\nconst storeName = 'search_results_store';\nexport const initializeDB = () => {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open(dbName, 1);\n    request.onerror = () => {\n      reject('Error opening IndexedDB');\n    };\n    request.onupgradeneeded = event => {\n      const db = event.target.result;\n      if (!db.objectStoreNames.contains(storeName)) {\n        db.createObjectStore(storeName, {\n          keyPath: 'id',\n          autoIncrement: true\n        });\n      }\n    };\n    request.onsuccess = () => {\n      resolve(request.result);\n    };\n  });\n};\nexport const storeSearchResults = async results => {\n  const db = await initializeDB();\n  const transaction = db.transaction([storeName], 'readwrite');\n  const store = transaction.objectStore(storeName);\n  for (const result of results) {\n    store.add(result);\n  }\n};\nexport const getStoredSearchResults = async () => {\n  const db = await initializeDB();\n  const transaction = db.transaction([storeName], 'readonly');\n  const store = transaction.objectStore(storeName);\n  return new Promise((resolve, reject) => {\n    const request = store.getAll();\n    request.onsuccess = () => {\n      resolve(request.result);\n    };\n    request.onerror = () => {\n      reject('Error retrieving search results from IndexedDB');\n    };\n  });\n};","map":{"version":3,"names":["dbName","storeName","initializeDB","Promise","resolve","reject","request","window","indexedDB","open","onerror","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","onsuccess","storeSearchResults","results","transaction","store","objectStore","add","getStoredSearchResults","getAll"],"sources":["C:/Users/Admin/OneDrive/Desktop/Search engine usng react/src/indexDB.js"],"sourcesContent":["const dbName = 'search_results_db';\r\nconst storeName = 'search_results_store';\r\n\r\nexport const initializeDB = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open(dbName, 1);\r\n\r\n    request.onerror = () => {\r\n      reject('Error opening IndexedDB');\r\n    };\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const db = event.target.result;\r\n      if (!db.objectStoreNames.contains(storeName)) {\r\n        db.createObjectStore(storeName, { keyPath: 'id', autoIncrement: true });\r\n      }\r\n    };\r\n\r\n    request.onsuccess = () => {\r\n      resolve(request.result);\r\n    };\r\n  });\r\n};\r\n\r\nexport const storeSearchResults = async (results) => {\r\n  const db = await initializeDB();\r\n  const transaction = db.transaction([storeName], 'readwrite');\r\n  const store = transaction.objectStore(storeName);\r\n\r\n  for (const result of results) {\r\n    store.add(result);\r\n  }\r\n};\r\n\r\nexport const getStoredSearchResults = async () => {\r\n  const db = await initializeDB();\r\n  const transaction = db.transaction([storeName], 'readonly');\r\n  const store = transaction.objectStore(storeName);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const request = store.getAll();\r\n\r\n    request.onsuccess = () => {\r\n      resolve(request.result);\r\n    };\r\n\r\n    request.onerror = () => {\r\n      reject('Error retrieving search results from IndexedDB');\r\n    };\r\n  });\r\n};\r\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,mBAAmB;AAClC,MAAMC,SAAS,GAAG,sBAAsB;AAExC,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,OAAO,GAAGC,MAAM,CAACC,SAAS,CAACC,IAAI,CAACT,MAAM,EAAE,CAAC,CAAC;IAEhDM,OAAO,CAACI,OAAO,GAAG,MAAM;MACtBL,MAAM,CAAC,yBAAyB,CAAC;IACnC,CAAC;IAEDC,OAAO,CAACK,eAAe,GAAIC,KAAK,IAAK;MACnC,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM;MAC9B,IAAI,CAACF,EAAE,CAACG,gBAAgB,CAACC,QAAQ,CAAChB,SAAS,CAAC,EAAE;QAC5CY,EAAE,CAACK,iBAAiB,CAACjB,SAAS,EAAE;UAAEkB,OAAO,EAAE,IAAI;UAAEC,aAAa,EAAE;QAAK,CAAC,CAAC;MACzE;IACF,CAAC;IAEDd,OAAO,CAACe,SAAS,GAAG,MAAM;MACxBjB,OAAO,CAACE,OAAO,CAACS,MAAM,CAAC;IACzB,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMO,kBAAkB,GAAG,MAAOC,OAAO,IAAK;EACnD,MAAMV,EAAE,GAAG,MAAMX,YAAY,CAAC,CAAC;EAC/B,MAAMsB,WAAW,GAAGX,EAAE,CAACW,WAAW,CAAC,CAACvB,SAAS,CAAC,EAAE,WAAW,CAAC;EAC5D,MAAMwB,KAAK,GAAGD,WAAW,CAACE,WAAW,CAACzB,SAAS,CAAC;EAEhD,KAAK,MAAMc,MAAM,IAAIQ,OAAO,EAAE;IAC5BE,KAAK,CAACE,GAAG,CAACZ,MAAM,CAAC;EACnB;AACF,CAAC;AAED,OAAO,MAAMa,sBAAsB,GAAG,MAAAA,CAAA,KAAY;EAChD,MAAMf,EAAE,GAAG,MAAMX,YAAY,CAAC,CAAC;EAC/B,MAAMsB,WAAW,GAAGX,EAAE,CAACW,WAAW,CAAC,CAACvB,SAAS,CAAC,EAAE,UAAU,CAAC;EAC3D,MAAMwB,KAAK,GAAGD,WAAW,CAACE,WAAW,CAACzB,SAAS,CAAC;EAEhD,OAAO,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,OAAO,GAAGmB,KAAK,CAACI,MAAM,CAAC,CAAC;IAE9BvB,OAAO,CAACe,SAAS,GAAG,MAAM;MACxBjB,OAAO,CAACE,OAAO,CAACS,MAAM,CAAC;IACzB,CAAC;IAEDT,OAAO,CAACI,OAAO,GAAG,MAAM;MACtBL,MAAM,CAAC,gDAAgD,CAAC;IAC1D,CAAC;EACH,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}